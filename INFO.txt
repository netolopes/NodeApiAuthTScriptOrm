yarn init -y
yarn add express
yarn add typescript -D
yarn tsc --init

alterar tsconfig:
"outDir": "./dist",
"rootDir": "./src",

yarn tsc (converte codigo de "src" para pasta "dist")
yarn add @types/express -D
//apos  convertido
node dist/server.js  (inicialmente)
yarn add ts-node-dev -D  (convert e atualiza on line , substitu o nodemon)
yarn dev:server

vscode instalar edotor config (padronizar estilo de codigo)

yarn add eslint -D
yarn eslint --init
respostas: syntax,problems ,style -- javascript --None -- yes --node(espaco selecionar) -- use popular -- standard --json
instal eslint vscode

yarn add -D eslint-import-resolver-typescript  -  habilita as importacoes de js

yarn add prettier eslint-config-prettier eslint-plugin-prettier -D
--- debug ---
variables: variaveis local e global e body
watch: ver a variavel em tempo real
def de callstack: todas as funcoes q foram executadas ate chega no ponto setado

--- banco 3 tipos de abstracoes ---
1 forma: driver do banco
2 forma: knex js - converte a consulta js em sql
3 forma: utilizando ORM(Sequelize ou typeOrm)

-- docker ---
https://hub.docker.com/_/postgres
 docker run --name db_postgres -e POSTGRES_PASSWORD=docker -p 5432:5432 -d postgres

  //verificar se a porta esta sendo usada
lsof -i :5432


--typeOrm --
https://typeorm.io/#/using-ormconfig
criar arquivo ormconfig.json

yarn typeorm migration:create -n CreateUsers
yarn typeorm migration:run

